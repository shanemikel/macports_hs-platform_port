Avoid leaking build path into ABI hashes

GHC's build path leaks into the ABI hashes it generates by default. This
causes problems because it means that recompiling GHC in a different path
also requires recompiling all Haskell packages. Obviously, this is
undesirable for a distribution.

This patch originates from Debian's Joachim Breitner. See
http://bugs.debian.org/785282 for the Debian bug report. It has been
submitted upstream in https://ghc.haskell.org/trac/ghc/ticket/10424.

Upstream-Status: Submitted [https://ghc.haskell.org/trac/ghc/ticket/10424]
Index: ./compiler/iface/MkIface.hs
===================================================================
--- ./compiler/iface/MkIface.hs	2015-05-17 20:34:02.808643844 +0200
+++ ./compiler/iface/MkIface.hs	2015-05-17 20:34:02.804643799 +0200
@@ -611,7 +611,7 @@
    iface_hash <- computeFingerprint putNameLiterally
                       (mod_hash,
                        ann_fn (mkVarOcc "module"),  -- See mkIfaceAnnCache
-                       mi_usages iface0,
+                       usages,
                        sorted_deps,
                        mi_hpc iface0)
 
@@ -644,6 +644,9 @@
     (non_orph_fis,   orph_fis)   = mkOrphMap ifFamInstOrph (mi_fam_insts iface0)
     fix_fn = mi_fix_fn iface0
     ann_fn = mkIfaceAnnCache (mi_anns iface0)
+    -- Do not allow filenames to affect the interface
+    usages = [ case u of UsageFile _ fp -> UsageFile "" fp; _ -> u | u <- mi_usages iface0 ]
+
 
 getOrphanHashes :: HscEnv -> [Module] -> IO [Fingerprint]
 getOrphanHashes hsc_env mods = do
